#include <iostream>


class NoPrime : public std::invalid_argument {
public:
  NoPrime(int value) : std::invalid_argument("Неверное простое число: " + std::to_string(value)), value_(value) {}

  int getValue() const { return value_; }

private:
  int value_;
};

class Prime {
public:
  Prime(int value) {
    if (!isPrime(value)) {
      throw NoPrime(value);
    }
    value_ = value;
  }

  bool isPrime(int value) {
    if (value <= 1) {
      return false;
    }
    for (int i = 2; i * i <= value; ++i) {
      if (value % i == 0) {
        return false;
      }
    }
    return true;
  }

  int getValue() const { return value_; }

private:
  int value_;
};

int main() {
  try {
    Prime prime1(7);
    std::cout << "Простое число: " << prime1.getValue() << std::endl;

    Prime prime2(14);
  } catch (const NoPrime& e) {
    std::cout << "Ошибка: " << e.what() << std::endl;
    std::cout << "Неверное простое число: " << e.getValue() << std::endl;
  }

  return 0;
}
